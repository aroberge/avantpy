"""Creates a version of traceback.rst to insert in the documentation.

This assumes that such a file already exist; this is only done to
ensure we have the right destination. If so, we actually rewrite it.

"""

import os
import sys
import platform
from contextlib import redirect_stdout


# Make it possible to find avantpy and docs source
this_dir = os.path.dirname(__file__)
parent_dir = os.path.abspath(os.path.join(this_dir, ".."))
sys.path.insert(0, this_dir)
sys.path.insert(0, parent_dir)


import avantpy  # sets up import hook


target = os.path.normpath(os.path.join(parent_dir, "docs/source/tracebacks.rst"))

try:
    assert os.path.isfile(target)
except AssertionError:
    print("Wrong path: traceback.rst does not exist.")
    print("This program should be run from the root directory of this repository.")
    sys.exit()

content = """Friendly error messages
=======================

AvantPy aims to provide friendlier feedback when an exception
is raised than what is done by Python.
Such feedback will also be available in languages other than English.

.. note::

     The content of this file is generated by running
     update_tb.py located in the ``dev_tools`` directory,
     which needs to be done explicitly.

AvantPy version: {avantpy}
Python version: {python}

""".format(
    avantpy=avantpy.version.__version__, python=platform.python_version()
)


def make_title(text):
    print()
    print(text)
    print("-" * len(text), "\n")
    print("Example::\n")


with open(target, "w") as out:
    with redirect_stdout(out):
        print(content)

        make_title("IfNobreakError")

        import ifnobreakerror

        make_title("TryNobreakError")
        import trynobreakerror

        make_title("NobreakFirstError")
        import nobreakfirst

        make_title("NobreakSyntaxError")
        import nobreaksyntaxerror

        make_title("RepeatFirstError")
        import repeatfirst

        make_title("UnknownLanguage")
        import unknown_language

        make_title("UnknownDialect")
        import unknown_dialect

        make_title("UnexpectedError")
        print("    No example found yet.\n")
