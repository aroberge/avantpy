"""Creates a version of traceback.rst to insert in the documentation.

This assumes that such a file already exist; this is only done to
ensure we have the right destination. If so, we actually rewrite it.

"""

import os
import sys
import platform
from contextlib import redirect_stderr


# Make it possible to find avantpy and docs source
this_dir = os.path.dirname(__file__)
root_dir = os.path.abspath(os.path.join(this_dir, "..", ".."))
sys.path.insert(0, this_dir)
sys.path.insert(0, root_dir)


# set up import
import avantpy  # noqa

# Require that a version already exists - to confirm we are at the right location
target = os.path.normpath(os.path.join(root_dir, "docs/source/tracebacks_upper.rst"))


def write(text):
    sys.stderr.write(text + "\n")


try:
    assert os.path.isfile(target)
except AssertionError:
    write("Wrong path: {} does not exist.".format(target))
    sys.exit()


content = """Friendly error messages
=======================

AvantPy aims to provide friendlier feedback when an exception
is raised than what is done by Python.
Such feedback will also be available in languages other than English.

.. note::

     The content of this page is generated by running
     {name} located in the ``tests/pyupper/`` directory.
     This needs to be done explicitly, independently of updating the
     documentation using Sphinx.

AvantPy version: {avantpy}
Python version: {python}

""".format(
    avantpy=avantpy.version.__version__, python=platform.python_version(), name=__file__
)


def make_title(text):
    write("\n" + text)
    write("-" * len(text) + "\n")
    write("Example::\n")


def create_tracebacks():
    with open(target, "w", encoding="utf8") as out:
        with redirect_stderr(out):
            write(content)

            make_title("IfNobreakError")
            import raise_if_nobreak

            make_title("MismatchedBracketsError")
            import raise_mismatched_brackets

            make_title("MissingLeftBracketError")
            import raise_missing_left_bracket

            make_title("MissingRepeatError")
            import raise_missing_repeat

            write("\nExample 2::")
            import raise_missing_repeat2

            make_title("NobreakFirstError")
            import raise_nobreak_first

            make_title("NobreakSyntaxError")
            import raise_nobreak_syntax

            make_title("RepeatFirstError")
            import raise_repeat_first

            make_title("TryNobreakError")
            import raise_try_nobreak

            make_title("UnknownLanguageError")
            import raise_unknown_language

            make_title("UnknownDialectError")
            import raise_unknown_dialect

            make_title("UnexpectedError")
            write("    No example found yet.\n")


try:
    create_tracebacks()
except ImportError:
    write("ImportError: please try running this program from it location using")
    write("             python tb_pyupper.py")
